diff -aru target-org/webkit/Source/JavaScriptCore/bytecode/CodeBlock.cpp target/webkit/Source/JavaScriptCore/bytecode/CodeBlock.cpp
--- target-org/webkit/Source/JavaScriptCore/bytecode/CodeBlock.cpp	2019-03-26 11:25:13.000000000 +0800
+++ target/webkit/Source/JavaScriptCore/bytecode/CodeBlock.cpp	2019-03-26 16:41:18.000000000 +0800
@@ -1437,6 +1437,7 @@
             result.add(callLinkInfo->codeOrigin(), ICStatus()).iterator->value.callLinkInfo = callLinkInfo;
         for (ByValInfo* byValInfo : m_byValInfos)
             result.add(CodeOrigin(byValInfo->bytecodeIndex), ICStatus()).iterator->value.byValInfo = byValInfo;
+#if ENABLE(DFG_JIT) || ENABLE(FTL_JIT)
         if (JITCode::isOptimizingJIT(jitType())) {
             DFG::CommonData* dfgCommon = m_jitCode->dfgCommon();
             for (auto& pair : dfgCommon->recordedStatuses.calls)
@@ -1448,6 +1449,7 @@
             for (auto& pair : dfgCommon->recordedStatuses.ins)
                 result.add(pair.first, ICStatus()).iterator->value.inStatus = pair.second.get();
         }
+#endif // ENABLE(DFG_JIT) || ENABLE(FTL_JIT)
     }
 #else
     UNUSED_PARAM(result);
diff -aru target-org/webkit/Source/JavaScriptCore/bytecode/InByIdStatus.cpp target/webkit/Source/JavaScriptCore/bytecode/InByIdStatus.cpp
--- target-org/webkit/Source/JavaScriptCore/bytecode/InByIdStatus.cpp	2019-03-26 11:25:13.000000000 +0800
+++ target/webkit/Source/JavaScriptCore/bytecode/InByIdStatus.cpp	2019-03-26 16:41:18.000000000 +0800
@@ -72,6 +72,7 @@
     CodeBlock* profiledBlock, ICStatusMap& baselineMap,
     ICStatusContextStack& contextStack, CodeOrigin codeOrigin, UniquedStringImpl* uid)
 {
+#if ENABLE(DFG_JIT)
     ExitFlag didExit = hasBadCacheExitSite(profiledBlock, codeOrigin.bytecodeIndex);

     for (ICStatusContext* context : contextStack) {
@@ -104,6 +105,10 @@
     }

     return computeFor(profiledBlock, baselineMap, codeOrigin.bytecodeIndex, uid, didExit);
+#else // ENABLE(DFG_JIT)
+    InByIdStatus result;
+    return result;
+#endif
 }
 #endif // ENABLE(JIT)

diff -aru target-org/webkit/Source/JavaScriptCore/bytecode/PutByIdStatus.cpp target/webkit/Source/JavaScriptCore/bytecode/PutByIdStatus.cpp
--- target-org/webkit/Source/JavaScriptCore/bytecode/PutByIdStatus.cpp	2019-03-26 11:25:14.000000000 +0800
+++ target/webkit/Source/JavaScriptCore/bytecode/PutByIdStatus.cpp	2019-03-26 16:46:07.000000000 +0800
@@ -118,7 +118,7 @@
         return computeFromLLInt(profiledBlock, bytecodeIndex, uid);

     return result;
-#else // ENABLE(JIT)
+#else // ENABLE(DFG_JIT)
     UNUSED_PARAM(map);
     return PutByIdStatus(NoInformation);
 #endif // ENABLE(JIT)
@@ -244,6 +244,7 @@

 PutByIdStatus PutByIdStatus::computeFor(CodeBlock* baselineBlock, ICStatusMap& baselineMap, ICStatusContextStack& contextStack, CodeOrigin codeOrigin, UniquedStringImpl* uid)
 {
+#if ENABLE(DFG_JIT)
     CallLinkStatus::ExitSiteData callExitSiteData =
         CallLinkStatus::computeExitSiteData(baselineBlock, codeOrigin.bytecodeIndex);
     ExitFlag didExit = hasExitSite(baselineBlock, codeOrigin.bytecodeIndex);
@@ -280,6 +281,9 @@
     }

     return computeFor(baselineBlock, baselineMap, codeOrigin.bytecodeIndex, uid, didExit, callExitSiteData);
+#else // ENABLE(DFG_JIT)
+    return PutByIdStatus(NoInformation);
+#endif // ENABLE(DFG_JIT)
 }

 PutByIdStatus PutByIdStatus::computeFor(JSGlobalObject* globalObject, const StructureSet& set, UniquedStringImpl* uid, bool isDirect)
